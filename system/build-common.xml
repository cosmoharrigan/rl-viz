<?xml version="1.0" encoding="UTF-8"?>
<!-- This is a common build-file to support building of projects for RL-Viz -->

<!-- This script will believe it is wherever you imported it from.  So, if you import it from projects/RLVizLib then to access system you need to tack on ../../system
We'll try and rely on minimal variables from above.

- rl.viz.system.directory : relative path from the importing project to here, WITHOUT the trailing slash, so like ../../system

-->

<project basedir=".."   name="rl-viz-common">
<dirname property="imported.basedir" file="${ant.file.imported}"/>

<property name="rlviz.libs.dir"   value="${rl.viz.system.directory}/libs"/>
<property name="dist.dir"   value="${rl.viz.system.directory}/dist"/>
<property name="src.dir"     value="src"/>
<property name="test.dir"	value="tests"/>
<property name="docs.dir"     value="javadocs"/>
<property name="build.dir"   value="build"/>
<property name="classes.dir" value="${build.dir}/classes"/>
<property name="test.classes.dir" value="${build.dir}/testclasses"/>

<property name="junit.jar" value="${rlviz.libs.dir}/junit.jar" />
<property name="rlgluecodec.jar" value="${rlviz.libs.dir}/RLGlueCodec/JavaRLGlueCodec.jar" />

<property name="test.reports"   value="reports"/>
<property name="test.raw"   value="reports/raw"/>
<property name="result.jar" value="${dist.dir}/${main.project.name}.jar" />
<property name="src.jar" value="${dist.dir}/${main.project.name}-src.jar" />


<!-- everyone can use this EXCEPT rlVizLib, for obvious reasons -->
<property name="rlvizlib.jar" value="${dist.dir}/RLVizLib.jar" />
<path id="rlvizlib.classpath" location="${rlvizlib.jar}"/>
<path id="junit.classpath" location="${junit.jar}"/>
<path id="rlgluecodec.classpath" location="${rlgluecodec.jar}"/>
<path id="test.build.classpath" location="${test.classes.dir}"/>
<path id="result.jar.classpath" location="${result.jar}"/>


<taskdef resource="net/sf/antcontrib/antlib.xml">
  <classpath>
    <pathelement location="${rl.viz.system.directory}/libs/ant-contrib-1.0b3.jar"/>
  </classpath>
</taskdef>

<target name="set.jar.extra.classpath">
	<if>
		<not><isset property="jar.extra.classpath" /></not>
		<then>
			<property name="jar.extra.classpath" value=""/>
		</then>
	</if>
</target>

<target name="set.jar.main.class">
	<if>
		<not><isset property="jar.main.class" /></not>
		<then>
			<property name="jar.main.class" value=""/>
		</then>
	</if>
</target>
	
	
<target name="get.rlglue.spec.version" description="Get the current spec version of rl-glue">
    <exec executable="java"
          failifexecutionfails="no"
          outputproperty="rlglue.spec.version">
    <arg value="-jar"/>
   <arg value="${rlgluecodec.jar}"/>
   <arg value="--version"/>
    </exec>
</target>
<target name="get.rlglue.build.version" description="Get the current spec version of rl-glue">
    <exec executable="java"
          failifexecutionfails="no"
          outputproperty="rlglue.build.version">
    <arg value="-jar"/>
   <arg value="${rlgluecodec.jar}"/>
   <arg value="--buildversion"/>
    </exec>
</target>

<target name="get.svn.version" description="Get the current subversion revision number of the project">
    <exec executable="svnversion"
          failifexecutionfails="no"
          outputproperty="svn.revision.version">
    <arg value="."/>
    </exec>
</target>

<target name="get.rlvizlib.version">
    <exec executable="java"
          failifexecutionfails="no"
          outputproperty="rlvizlib.spec.version">
		<arg value="-jar"/>
		<arg value="${rlvizlib.jar}"/>
		<arg value="--version"/>
    </exec>
</target>

<target name="rl-clean" >
    <delete dir="${build.dir}"/>
<!--    <delete dir="${docs.dir}"/>-->
    <delete dir="${test.raw}"/>
    <delete dir="${test.reports}"/>
</target>

<target name="rl-debug">
	<property name="build.debug" value="on"/>
</target>

<target name="rl-compile" >
   <mkdir dir="${classes.dir}"/>
	<if>
		<equals arg1="${os.name}" arg2="Mac OS X" />
		<then>
			<property name="useOSXclasses" value="true"/>
		</then>
	</if>
    <javac srcdir="${src.dir}" destdir="${classes.dir}"  debug="${build.debug}" target="1.5" deprecation="${build.deprecation}">
	    <classpath>
            <path refid="rlvizlib.classpath" />
 		    <path refid="project.extra.classpath" />
		</classpath>
		<exclude name="**/MacOSAboutHandler.java" unless="useOSXclasses"/>
	</javac> 
</target>


<target name="rl-jar" depends="rl-compile,get.svn.version,get.rlvizlib.version,set.jar.main.class,set.jar.extra.classpath" >
    <mkdir dir="${dist.dir}" />
    <jar destfile="${result.jar}" basedir="${classes.dir}" >
        <manifest>
		   <attribute name="RLVizLib-Link-Version" value="${rlvizlib.spec.version}"/>
			
			<attribute name="Class-Path" value="${jar.extra.classpath}" />
			<attribute name="Main-Class" value="${jar.main.class}" />
			

		    <section name="${main.package.name}">
		      <attribute name="Specification-Title" value="${main.project.name}"/>
		      <attribute name="Specification-Version" value="${main.package.spec.version}"/>
		      <attribute name="Specification-Vendor" value="RLAI"/>
		      <attribute name="Implementation-Title" value="${main.project.name}"/>
		      <attribute name="Implementation-Version" value="Build:${svn.revision.version}"/> 
		      <attribute name="Implementation-Vendor" value="${main.vendor.name}"/>
		    </section>
        </manifest>
    </jar>
</target>

<target name="rl-compile-tests" depends="rl-jar">
    <mkdir dir="${test.classes.dir}"/>
	
    <javac srcdir="${test.dir}" destdir="${test.classes.dir}" target="1.5">
        <classpath>
            <path refid="junit.classpath" />
            <path refid="rlvizlib.classpath" />
            <path refid="result.jar.classpath" />
        </classpath>
    </javac>
</target>

<target name="rl-test" depends="rl-clean,rl-jar,rl-compile-tests">
	<mkdir dir="${test.raw}" />
   <junit printsummary="withOutAndErr" showoutput="yes" >
        <classpath>
            <path refid="rlvizlib.classpath"/>
            <path refid="junit.classpath" /> 
			<path refid="result.jar.classpath" />
			<path refid="test.build.classpath" />
        </classpath>
        
        <batchtest fork="yes" todir="${test.raw}">
            <formatter type="xml"/> 
            <fileset dir="${test.dir}" includes="**/*Test.java"/>
        </batchtest>
    </junit>
</target> 

<target name="rl-test-html" depends="rl-test">
	<mkdir dir="${test.reports}" />
    <junitreport todir="${test.reports}">
        <fileset dir="${test.raw}">
            <include name="TEST-*.xml" />
        </fileset>
        <report todir="${test.reports}" />
    </junitreport>
</target>


<target name="rl-javadoc">
    <mkdir dir="${docs.dir}"/>
    <javadoc sourcepath="${src.dir}" destdir="${docs.dir}" classpathref="rlvizlib.classpath" access="private"/>
</target>

</project>
