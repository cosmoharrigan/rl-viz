<project name="RLVizLib" basedir="." >
    <!-- We need to booststrap most of the rest of the project using RLVizLib, so it has the least generic build file.
		 We should be able to re-use more things with the rest of the projects -->
		
    <!-- This file holds the rlVizLib.spec.version -->
	<property file="version.xml"/>
	
	<property name="baseLibraryDir" value="../.."/>
	<!-- Things required for build-common.xml -->
	<property name="main.project.name" value="${ant.project.name}"/>
	<property name="main.package.name" value="rlVizLib/"/>
	<property name="main.package.spec.version" value="${rlVizLib.spec.version}"/>
	<property name="main.vendor.name" value="Brian Tanner"/>
	<property name="rl.viz.system.directory" value="${baseLibraryDir}/system"/>
	<path id="project.extra.classpath" />
	<import file="${rl.viz.system.directory}/build-common.xml"/>




    <target name="clean" depends="rl-clean" />
    
<!-- Not using rl-compile in build-common.xml because we need RL-Glue.jar -->
    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="rlglue.classpath" /> 
    </target>

    <target name="jar" depends="compile,get.svn.version" >
        <unjar src="${rlglue.jar}" dest="${classes.dir}" />
        <mkdir dir="${dist.dir}" />
        <jar destfile="${result.jar}" basedir="${classes.dir}" >
            <manifest>
                <attribute name="Main-Class" value="rlVizLib.rlVizCore"/>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="rlVizLib/">
                    <attribute name="Specification-Title" value="rlVizLib"/>
                    <attribute name="Specification-Version" value="${rlVizLib.spec.version}"/>
                    <attribute name="Specification-Vendor" value="RLAI"/>
                    <attribute name="Implementation-Title" value="rlVizLib"/>
                    <attribute name="Implementation-Version" value="Build:${svn.revision.version}"/> 
                    <attribute name="Implementation-Vendor" value="Brian Tanner"/>
                </section>
            </manifest>
        </jar>
    </target>

    <target name="clean-build" depends="clean,jar"/>
    
    
    <target name="compile-tests" depends="jar">
	    <mkdir dir="${test.classes.dir}"/>
        <javac srcdir="${test.dir}" destdir="${test.classes.dir}">
            <classpath>
                <path refid="junit.classpath" />
 				<path refid="result.jar.classpath" />
            </classpath>
        </javac>
    </target>
    
    <target name="run-test" depends="clean,compile-tests,jar">
		<mkdir dir="${test.raw}" />
       <junit printsummary="withOutAndErr" showoutput="yes" >
            <classpath>
                <path refid="junit.classpath" /> 
				<path refid="result.jar.classpath" />
				<path refid="test.build.classpath" />

            </classpath>
            
            <batchtest fork="yes" todir="${test.raw}">
                <formatter type="xml"/> 
                <fileset dir="${test.dir}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target> 
    
    <target name="test" depends="run-test">
		<mkdir dir="${test.reports}" />
        <junitreport todir="${test.reports}">
            <fileset dir="${test.raw}">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${test.reports}" />
        </junitreport>
    </target>
    
    
    <target name="javadoc" depends="rl-javadoc" />
</project>

